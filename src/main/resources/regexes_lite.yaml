device:
  - regex: '(?i)(vivo|letv)[\s-]?([\w-]+)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)android.+;\s(oppo)\s?([\w\s]+)\sbuild'
    args: 'VENDOR;MODEL'
    value: 'oppo;'
  - regex: '(?i)d\/huawei|honor([\w\s-]+)[;\)]'
    args: 'MODEL;VENDOR'
    value: ';Huawei'
  - regex: '(?i)((iph[oned|\s\w*]+)|(ip[o|a]d[\s\w*]+))'
    args: 'MODEL;VENDOR'
    value: ';Apple'
  - regex: '(?i)((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))'
    args: 'VENDOR;MODEL'
    value: 'Samsung;'
  - regex: '(?i)(nexus\s[45])'
    args: 'MODEL;VENDOR'
    value: ';LG'
  - regex:  '(?i)(xiaomi|redmi|miui)[_\s-]?([\w-]+)*'
    args: 'MODEL;VENDOR'
    value:  ';Xiaomi'
  - regex: '(?i)android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d\w)?)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Xiaomi'
  - regex: '(?i)android.+;\s(m[1-5]\snote)\sbuild'
    args: 'MODEL;VENDOR'
    value: ';Meizu'
  - regex: '(?i)\((ip[honed|\s\w*]+);.+(apple)'
    args: 'MODEL;VENDOR'
    value: ';'
  - regex: '(?i)android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)'
    args: 'MODEL;VENDOR'
    value: ';Asus'
  - regex: '(?i)(android).+[;\/]\s+([YR]\d{2}x?.*)\s+build'
    args: 'VENDOR;MODEL'
    value: 'Dragon Touch;'
  - regex: '(?i)(Coolpad|alcatel|geeksphone|lenovo|nexian|panasonic|blackberry|benq|palm(?=\-)|acer|asus|dell|meizu|motorola|polytron|(?=;\s)sony)[_\s-]?([\w-]+)*'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)\((ipad|playbook);[\w\s\);-]+(rim|apple)'
    args: 'MODEL;VENDOR'
    value: ';'
  - regex: '(?i)android.+[;\/]\s*((NX|Next)-?.+)\s+build'
    args: 'MODEL;VENDOR'
    value: ';NextBook'
  - regex: '(?i)android.+\s([c-g]\d{4}|so[-l]\w+)\sbuild\/'
    args: 'MODEL;VENDOR'
    value: ';Sony'
  - regex: '(?i)android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Xiaomi'
  - regex: '(?i)(sam[sung]*)[\s-]*(\w+-?[\w-]*)*'
    args: 'VENDOR;MODEL'
    value: 'Samsung;'
  - regex: '(?i)mot[\s-]?(\w+)*'
    args: 'MODEL;VENDOR'
    value: ';Motorola'
  - regex: '(?i)android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))'
    args: 'VENDOR;MODEL'
    value: 'Samsung;'
  - regex: '(?i)applecoremedia\/[\w\.]+ \((ipad)'
    args: 'MODEL;VENDOR'
    value: ';Apple'
  - regex: '(?i)(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)android.+(\w+)\s+build\/hm\1'
    args: 'MODEL;VENDOR'
    value: ';Xiaomi'
  - regex: '(?i)(nokia)[\s_-]?([\w-]+)*'
    args: 'VENDOR;MODEL'
    value: 'Nokia;'
  - regex: '(?i)lg[e;\s\/-]+(\w+)*'
    args: 'MODEL;VENDOR'
    value: ';LG'
  - regex: '(?i)((SM-T\w+))'
    args: 'VENDOR;MODEL'
    value: 'Samsung;'
  - regex: '(?i)(asus)-?(\w+)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)android.+[;\/]\s*(zte)?.+(k\d{2})\s+build'
    args: 'VENDOR;MODEL'
    value: 'ZTE;'
  - regex: '(?i)(nexus\s6)'
    args: 'MODEL;VENDOR'
    value: ';Motorola'
  - regex: '(?i)(zte)-(\w+)*'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(XT\d{3,4}) build\/'
    args: 'MODEL;VENDOR'
    value: ';Motorola'
  - regex: '(?i)android.+a000(1)\s+build'
    args: 'MODEL;VENDOR'
    value: ';OnePlus'
  - regex: '(?i)(playstation\s[34portablevi]+)'
    args: 'MODEL;VENDOR'
    value: ';Sony'
  - regex: '(?i)android.+lg(\-?[\d\w]+)\s+build'
    args: 'MODEL;VENDOR'
    value: ';LG'
  - regex: '(?i)(hp).+(tablet)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)android.+(ideatab[a-z0-9\-\s]+)'
    args: 'MODEL;VENDOR'
    value: ';Lenovo'
  - regex: ';[\s+]([\w]+)[\s-]+([\w]+)([\s]+)Build/'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(QSP|SMART-TV)([\w\.]+)*'
    args: 'MODEL;VENDOR'
    value: ';OTV'

os:
  - regex: '(?i)iph[oned][\/\s]+(?:.*os\s([\w\.]+)*\slike\smac|;\sopera)'
    args: 'VERSION;NAME'
    value: ';iOS'
  - regex: '(?i)(android |okhttp)[\/\s-]?([\d\.]+)*'
    args: 'NAME;VERSION'
    value: 'Android;'
  - regex: '(?i)(android|ios)[\/\s-]?([\d\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(xiaomi|miui|samsung|oppo|vivo|huawei|lenovo|meizu|motorola|htc|lg|sony)[_\s-]?([\w-]+)*'
    args: 'NAME;VERSION'
    value: 'Android;'
  - regex: '(?i)(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)'
    args: 'NAME;VERSION'
    value: ';maps.os.windows.version'
  - regex: '(?i)(mac\sos\sx)\s?([\w\s\.]+\w)*'
    args: 'NAME;VERSION'
    value: 'Mac OS;'
  - regex: '(?i)(CFNetwork|Darwin)([\w\.]+)*'
    args: 'NAME;VERSION'
    value: 'iOS;'
  - regex: '(?i)(hurd|linux)\s?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(macintosh|mac(?=_powerpc)\s)'
    args: 'NAME;VERSION'
    value: 'Mac OS;'
  - regex: '(?i)(QSP|SMART-TV)([\w\.]+)*'
    args: 'NAME;VERSION'
    value: 'Linux;'
  - regex: '(?i)(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)'
    args: 'NAME;VERSION'
    value: 'Windows;maps.os.windows.version'
  - regex: '(?i)(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s]+\w)*'
    args: 'NAME;VERSION'
    value: ';maps.os.windows.version'
  - regex: '(?i)(webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: 'Symbian;'

browser:
  - regex:  '(?i)(?:ms|\()(ie)\s([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*'
    args: 'VERSION;NAME'
    value:  ';Android Browser'
  - regex:  '(?i)(mqqbrowser|qqbrowser|ucweb)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)m?(qqbrowser)[\/\s]?([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'QQ Browser;'
  - regex:  '(?i)webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';maps.browser.oldsafari.version'
  - regex:  '(?i)\swv\).+(chrome)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'WebView;'
  - regex:  '(?i)(micromessenger|wechat)[\/\s]([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'WeChat;'
  - regex:  '(?i)(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(QQ)\/([\d\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(webkit|khtml)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'UCBrowser;'
  - regex:  '(?i)(trident).+rv[:\s]([\w\.]+).+like\sgecko'
    args: 'NAME;VERSION'
    value:  'IE;'
  - regex:  '(?i)version\/([\w\.]+).+?mobile\/\w+\s(safari)'
    args: 'VERSION;NAME'
    value:  ';Mobile Safari'
  - regex:  '(?i)xiaomi\/miuibrowser\/([\w\.]+)'
    args: 'VERSION;NAME'
    value:  ';MIUI Browser'
  - regex:  '(?i)((?:oculus|samsung)browser)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  '正则(.+(?:g|us))(.+);'
  - regex:  '(?i)(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(opera)[\/\s]+([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(edge)\/((\d+)?[\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)version\/([\w\.]+).+?(mobile\s?safari|safari)'
    args: 'VERSION;NAME'
    value:  ';'
  - regex:  '(?i)(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)\s(opr)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'Opera;'
  - regex:  '(?i)(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser)\/([\w\.-]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)((?:android.+)crmo|crios)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'Chrome;'
  - regex:  '(?i);fbav\/([\w\.]+);'
    args: 'VERSION;NAME'
    value:  ';Facebook'

cpu:
  - regex: '(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]'
    args: 'ARCHITECTURE'
    value: 'amd64'
  - regex: '(ia32(?=;))'
    args: 'ARCHITECTURE'
    value: 'util.lowerize'
  - regex: '((?:i[346]|x)86)[;\)]'
    args: 'ARCHITECTURE'
    value: 'ia32'
  - regex: 'windows\s(ce|mobile);\sppc;'
    args: 'ARCHITECTURE'
    value: 'arm'
  - regex: '((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))'
    args: 'ARCHITECTURE'
    value: 'PowerPC'
  - regex: '(sun4\w)[;\)]'
    args: 'ARCHITECTURE'
    value: 'sparc'
  - regex: '((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)'
    args: 'ARCHITECTURE'
    value: 'util.lowerize'

engine:
  - regex: 'windows.+\sedge\/([\w\.]+)'
    args: 'VERSION;NAME'
    value: ';EdgeHTML'
  - regex: '(presto)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(khtml|tasman|links)[\/\s]\(?([\w\.]+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(icab)[\/\s]([23]\.[\d\.]+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: 'rv\:([\w\.]+).*(gecko)'
    args: 'VERSION;NAME'
    value: ';'
