device:
  - regex: '(?i)android.+(ideatab[a-z0-9\-\s]+)'
    args: 'MODEL;VENDOR'
    value: ';Lenovo'
  - regex: '(?i)linux;.+((jolla));'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)((pebble))app\/[\d\.]+\s'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)android.+;\s(oppo)\s?([\w\s]+)\sbuild'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)crkey'
    args: 'MODEL;VENDOR'
    value: 'Chromecast;Google'
  - regex: '(?i)android.+;\s(glass)\s\d'
    args: 'MODEL;VENDOR'
    value: ';Google'
  - regex: '(?i)android.+;\s(pixel c)\s'
    args: 'MODEL;VENDOR'
    value: ';Google'
  - regex: '(?i)android.+;\s(pixel xl|pixel)\s'
    args: 'MODEL;VENDOR'
    value: ';Google'
  - regex: '(?i)android.+(\w+)\s+build\/hm\1'
    args: 'MODEL;VENDOR'
    value: ';Xiaomi'
  - regex: '(?i)android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Xiaomi'
  - regex: '(?i)android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d\w)?)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Xiaomi'
  - regex: '(?i)android.+;\s(m[1-5]\snote)\sbuild'
    args: 'MODEL;VENDOR'
    value: ';Meizu'
  - regex: '(?i)android.+a000(1)\s+build'
    args: 'MODEL;VENDOR'
    value: ';OnePlus'
  - regex: '(?i)vivo[\s-]?([\w-]+)'
    args: 'MODEL;VENDOR'
    value: ';vivo'
  - regex: '(?i)\((ipad|playbook);[\w\s\);-]+(rim|apple)'
    args: 'MODEL;VENDOR'
    value: ';'
  - regex: '(?i)applecoremedia\/[\w\.]+ \((ipad)'
    args: 'MODEL;VENDOR'
    value: ';Apple'
  - regex: '(?i)(apple\s{0,1}tv)'
    args: 'MODEL;VENDOR'
    value: 'Apple TV;Apple'
  - regex: '(?i)(archos)\s(gamepad2?)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(hp).+(touchpad)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(hp).+(tablet)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(kindle)\/([\w\.]+)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)\s(nook)[\w\s]+build\/(\w+)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(dell)\s(strea[kpr\s\d]*[\dko])'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(kf[A-z]+)\sbuild\/[\w\.]+.*silk\/'
    args: 'MODEL;VENDOR'
    value: ';Amazon'
  - regex: '(?i)(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//'
    args: 'MODEL;VENDOR'
    value: 'maps.device.amazon.model;Amazon'
  - regex: '(?i)\((ip[honed|\s\w*]+);.+(apple)'
    args: 'MODEL;VENDOR'
    value: ';'
  - regex: '(?i)\((ip[honed|\s\w*]+);'
    args: 'MODEL;VENDOR'
    value: ';Apple'
  - regex: '(?i)(hp)\s([\w\s]+\w)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(asus)-?(\w+)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)\(bb10;\s(\w+)'
    args: 'MODEL;VENDOR'
    value: ';BlackBerry'
  - regex: '(?i)android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)'
    args: 'MODEL;VENDOR'
    value: ';Asus'
  - regex: '(?i)(sony)\s(tablet\s[ps])\sbuild\/'
    args: 'VENDOR;MODEL'
    value: 'Sony;Xperia Tablet'
  - regex: '(?i)(sony)?(?:sgp.+)\sbuild\/'
    args: 'VENDOR;MODEL'
    value: 'Sony;Xperia Tablet'
  - regex: '(?i)android.+\s([c-g]\d{4}|so[-l]\w+)\sbuild\/'
    args: 'MODEL;VENDOR'
    value: ';Sony'
  - regex: '(?i)\s(ouya)\s'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(nintendo)\s([wids3u]+)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)android.+;\s(shield)\sbuild'
    args: 'MODEL;VENDOR'
    value: ';Nvidia'
  - regex: '(?i)(playstation\s[34portablevi]+)'
    args: 'MODEL;VENDOR'
    value: ';Sony'
  - regex: '(?i)(sprint\s(\w+))'
    args: 'VENDOR;MODEL'
    value: 'maps.device.sprint.vendor;maps.device.sprint.model'
  - regex: '(?i)(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))'
    args: 'VENDOR;MODEL'
    value: 'Lenovo;'
  - regex: '(?i)(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(zte)-(\w+)*'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(alcatel|geeksphone|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(nexus\s9)'
    args: 'MODEL;VENDOR'
    value: ';HTC'
  - regex: '(?i)d\/huawei([\w\s-]+)[;\)]'
    args: 'MODEL;VENDOR'
    value: ';Huawei'
  - regex: '(?i)(nexus\s6p)'
    args: 'MODEL;VENDOR'
    value: ';Huawei'
  - regex: '(?i)hbbtv.+maple;(\d+)'
    args: 'MODEL;VENDOR'
    value: 'SmartTV;Samsung'
  - regex: '(?i)android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))'
    args: 'VENDOR;MODEL'
    value: 'Samsung;'
  - regex: '(?i)((SM-T\w+))'
    args: 'VENDOR;MODEL'
    value: 'Samsung;'
  - regex: '(?i)smart-tv.+(samsung)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))'
    args: 'VENDOR;MODEL'
    value: 'Samsung;'
  - regex: '(?i)(sam[sung]*)[\s-]*(\w+-?[\w-]*)*'
    args: 'VENDOR;MODEL'
    value: 'Samsung;'
  - regex: '(?i)sec-((sgh\w+))'
    args: 'VENDOR;MODEL'
    value: 'Samsung;'
  - regex: '(?i)(microsoft);\s(lumia[\s\w]+)'
    args: 'VENDOR;MODEL'
    value: 'Microsoft;'
  - regex: '(?i)\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\/'
    args: 'MODEL;VENDOR'
    value: ';Motorola'
  - regex: '(?i)mot[\s-]?(\w+)*'
    args: 'MODEL;VENDOR'
    value: ';Motorola'
  - regex: '(?i)(XT\d{3,4}) build\/'
    args: 'MODEL;VENDOR'
    value: ';Motorola'
  - regex: '(?i)(nexus\s6)'
    args: 'MODEL;VENDOR'
    value: ';Motorola'
  - regex: '(?i)android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\/'
    args: 'MODEL;VENDOR'
    value: ';Motorola'
  - regex: '(?i)hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)\(dtv[\);].+(aquos)'
    args: 'MODEL;VENDOR'
    value: ';Sharp'
  - regex: '(?i)android\s3\.[\s\w;-]{10}(a\d{3})'
    args: 'MODEL;VENDOR'
    value: ';Acer'
  - regex: '(?i)android.+([vl]k\-?\d{3})\s+build'
    args: 'MODEL;VENDOR'
    value: ';LG'
  - regex: '(?i)android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})'
    args: 'VENDOR;MODEL'
    value: 'LG;'
  - regex: '(?i)(lg) netcast\.tv'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(nexus\s[45])'
    args: 'MODEL;VENDOR'
    value: ';LG'
  - regex: '(?i)lg[e;\s\/-]+(\w+)*'
    args: 'MODEL;VENDOR'
    value: ';LG'
  - regex: '(?i)android.+lg(\-?[\d\w]+)\s+build'
    args: 'MODEL;VENDOR'
    value: ';LG'
  - regex: '(?i)android.+[;\/]\s*(RCT[\d\w]+)\s+build'
    args: 'MODEL;VENDOR'
    value: ';RCA'
  - regex: '(?i)android.+[;\/]\s*(Venue[\d\s]*)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Dell'
  - regex: '(?i)android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Verizon'
  - regex: '(?i)android.+[;\/]\s+(TM\d{3}.*\b)\s+build'
    args: 'MODEL;VENDOR'
    value: ';NuVision'
  - regex: '(?i)android.+[;\/]\s*(zte)?.+(k\d{2})\s+build'
    args: 'VENDOR;MODEL'
    value: 'ZTE;'
  - regex: '(?i)android.+[;\/]\s*(gen\d{3})\s+build.*49h'
    args: 'MODEL;VENDOR'
    value: ';Swiss'
  - regex: '(?i)android.+[;\/]\s*(zur\d{3})\s+build'
    args: 'MODEL;VENDOR'
    value: ';Swiss'
  - regex: '(?i)android.+[;\/]\s*((Zeki)?TB.*\b)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Zeki'
  - regex: '(?i)(android).+[;\/]\s+([YR]\d{2}x?.*)\s+build'
    args: 'VENDOR;MODEL'
    value: 'Dragon Touch;'
  - regex: '(?i)android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(.+)\s+build'
    args: 'VENDOR;MODEL'
    value: 'Dragon Touch;'
  - regex: '(?i)android.+[;\/]\s*(NS-?.+)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Insignia'
  - regex: '(?i)android.+[;\/]\s*((NX|Next)-?.+)\s+build'
    args: 'MODEL;VENDOR'
    value: ';NextBook'
  - regex: '(?i)android.+[;\/]\s*(Xtreme\_?)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build'
    args: 'VENDOR;MODEL'
    value: 'Voice;'
  - regex: '(?i)android.+[;\/]\s*(LVTEL\-?)?(V1[12])\s+build'
    args: 'VENDOR;MODEL'
    value: 'LvTel;'
  - regex: '(?i)android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Envizen'
  - regex: '(?i)\s(mobile)(?:[;\/]|\ssafari)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(android.+)[;\/].+build'
    args: 'MODEL;VENDOR'
    value: ';Generic'
  - regex: '(?i)android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(.*\b)\s+build'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)android.+[;\/]\s*(Trio[\s\-]*.*)\s+build'
    args: 'MODEL;VENDOR'
    value: ';MachSpeed'
  - regex: '(?i)android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)android.+[;\/]\s*TU_(1491)\s+build'
    args: 'MODEL;VENDOR'
    value: ';Rotor'
  - regex: '(?i)android.+(KS(.+))\s+build'
    args: 'MODEL;VENDOR'
    value: ';Amazon'
  - regex: '(?i)android.+(Gigaset)[\s\-]+(Q.+)\s+build'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)\s(tablet|tab)[;\/]'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(maemo|nokia).*(n900|lumia\s\d+)'
    args: 'VENDOR;MODEL'
    value: 'Nokia;'
  - regex: '(?i)(nokia)[\s_-]?([\w-]+)*'
    args: 'VENDOR;MODEL'
    value: 'Nokia;'
  - regex: '(?i)[\s\(;](xbox(?:\sone)?)[\s\);]'
    args: 'MODEL;VENDOR'
    value: ';Microsoft'
  - regex: '(?i)(kin\.[onetw]{3})'
    args: 'MODEL;VENDOR'
    value: ';Microsoft'
  - regex: '(?i)(blackberry)[\s-]?(\w+)'
    args: 'VENDOR;MODEL'
    value: ';'
  - regex: '(?i)(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]+)*'
    args: 'VENDOR;MODEL'
    value: ';'

os:
  - regex: '(?i)(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)linux;.+(sailfish);'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)mozilla.+\(mobile;.+gecko.+firefox'
    args: 'NAME;VERSION'
    value: 'Firefox OS;'
  - regex: '(?i)(mint)[\/\s\(]?(\w+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(mageia|vectorlinux)[;\s]'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(hurd|linux)\s?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(gnu)\s?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(cros)\s[\w]+\s([\w\.]+\w)'
    args: 'NAME;VERSION'
    value: 'Chromium OS;'
  - regex: '(?i)(sunos)\s?([\w\.]+\d)*'
    args: 'NAME;VERSION'
    value: 'Solaris;'
  - regex: '(?i)\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(haiku)\s(\w+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)cfnetwork\/.+darwin'
    args: 'VERSION;NAME'
    value: ';iOS'
  - regex: '(?i)ip[honead]+(?:.*os\s([\w]+)*\slike\smac|;\sopera)'
    args: 'VERSION;NAME'
    value: ';iOS'
  - regex: '(?i)(mac\sos\sx)\s?([\w\s\.]+\w)*'
    args: 'NAME;VERSION'
    value: 'Mac OS;'
  - regex: '(?i)(macintosh|mac(?=_powerpc)\s)'
    args: 'NAME;VERSION'
    value: 'Mac OS;'
  - regex: '(?i)(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(unix)\s?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)microsoft\s(windows)\s(vista|xp)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(windows)\snt\s6\.2;\s(arm)'
    args: 'NAME;VERSION'
    value: ';maps.os.windows.version'
  - regex: '(?i)(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s]+\w)*'
    args: 'NAME;VERSION'
    value: ';maps.os.windows.version'
  - regex: '(?i)(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)'
    args: 'NAME;VERSION'
    value: ';maps.os.windows.version'
  - regex: '(?i)(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)'
    args: 'NAME;VERSION'
    value: 'Windows;maps.os.windows.version'
  - regex: '(?i)\((bb)(10);'
    args: 'NAME;VERSION'
    value: 'BlackBerry;'
  - regex: '(?i)(blackberry)\w*\/?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(tizen)[\/\s]([\w\.]+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)((?:open)?solaris)[\/\s-]?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(?i)(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*'
    args: 'NAME;VERSION'
    value: 'Symbian;'
  - regex: '(?i)\((series40);'
    args: 'NAME;VERSION'
    value: ';'

browser:
  - regex:  '(?i)(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(opios)[\/\s]+([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'Opera Mini;'
  - regex:  '(?i)\s(opr)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'Opera;'
  - regex:  '(?i)(kindle)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(?:ms|\()(ie)\s([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(rekonq)\/([\w\.]+)*'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser)\/([\w\.-]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(trident).+rv[:\s]([\w\.]+).+like\sgecko'
    args: 'NAME;VERSION'
    value:  'IE;'
  - regex:  '(?i)(edge)\/((\d+)?[\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(yabrowser)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'Yandex;'
  - regex:  '(?i)(puffin)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'Puffin;'
  - regex:  '(?i)((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'UCBrowser;'
  - regex:  '(?i)(comodo_dragon)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(micromessenger)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'WeChat;'
  - regex:  '(?i)(QQ)\/([\d\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)m?(qqbrowser)[\/\s]?([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)xiaomi\/miuibrowser\/([\w\.]+)'
    args: 'VERSION;NAME'
    value:  ';MIUI Browser'
  - regex:  '(?i);fbav\/([\w\.]+);'
    args: 'VERSION;NAME'
    value:  ';Facebook'
  - regex:  '(?i)(headlesschrome) ([\w\.]+)'
    args: 'VERSION;NAME'
    value:  ';Chrome Headless'
  - regex:  '(?i)\swv\).+(chrome)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'WebView;'
  - regex:  '(?i)((?:oculus|samsung)browser)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  '正则(.+(?:g|us))(.+);'
  - regex:  '(?i)android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*'
    args: 'VERSION;NAME'
    value:  ';Android Browser'
  - regex:  '(?i)(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(dolfin)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'Dolphin;'
  - regex:  '(?i)((?:android.+)crmo|crios)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'Chrome;'
  - regex:  '(?i)(coast)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  'Opera Coast;'
  - regex:  '(?i)fxios\/([\w\.-]+)'
    args: 'VERSION;NAME'
    value:  ';Firefox'
  - regex:  '(?i)version\/([\w\.]+).+?mobile\/\w+\s(safari)'
    args: 'VERSION;NAME'
    value:  ';Mobile Safari'
  - regex:  '(?i)version\/([\w\.]+).+?(mobile\s?safari|safari)'
    args: 'VERSION;NAME'
    value:  ';'
  - regex:  '(?i)webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';maps.browser.oldsafari.version'
  - regex:  '(?i)(konqueror)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(webkit|khtml)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(navigator|netscape)\/([\w\.-]+)'
    args: 'NAME;VERSION'
    value:  'Netscape;'
  - regex:  '(?i)(opera\smini)\/([\w\.-]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(opera\s[mobiletab]+).+version\/([\w\.-]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(opera).+version\/([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(opera)[\/\s]+([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(swiftfox)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(links)\s\(([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(gobrowser)\/?([\w\.]+)*'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(ice\s?browser)\/v?([\w\._]+)'
    args: 'NAME;VERSION'
    value:  ';'
  - regex:  '(?i)(mosaic)[\/\s]([\w\.]+)'
    args: 'NAME;VERSION'
    value:  ';'

cpu:
  - regex: '(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]'
    args: 'ARCHITECTURE'
    value: 'amd64'
  - regex: '(ia32(?=;))'
    args: 'ARCHITECTURE'
    value: 'util.lowerize'
  - regex: '((?:i[346]|x)86)[;\)]'
    args: 'ARCHITECTURE'
    value: 'ia32'
  - regex: 'windows\s(ce|mobile);\sppc;'
    args: 'ARCHITECTURE'
    value: 'arm'
  - regex: '((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))'
    args: 'ARCHITECTURE'
    value: 'PowerPC'
  - regex: '(sun4\w)[;\)]'
    args: 'ARCHITECTURE'
    value: 'sparc'
  - regex: '((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)'
    args: 'ARCHITECTURE'
    value: 'util.lowerize'

engine:
  - regex: 'windows.+\sedge\/([\w\.]+)'
    args: 'VERSION;NAME'
    value: ';EdgeHTML'
  - regex: '(presto)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(khtml|tasman|links)[\/\s]\(?([\w\.]+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: '(icab)[\/\s]([23]\.[\d\.]+)'
    args: 'NAME;VERSION'
    value: ';'
  - regex: 'rv\:([\w\.]+).*(gecko)'
    args: 'VERSION;NAME'
    value: ';'
